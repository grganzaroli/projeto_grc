# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_mack_sdr_rossi_swig', [dirname(__file__)])
        except ImportError:
            import _mack_sdr_rossi_swig
            return _mack_sdr_rossi_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_mack_sdr_rossi_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _mack_sdr_rossi_swig = swig_import_helper()
    del swig_import_helper
else:
    import _mack_sdr_rossi_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
  """high_res_timer_now() -> gr::high_res_timer_type"""
  return _mack_sdr_rossi_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
  """high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
  return _mack_sdr_rossi_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
  """high_res_timer_tps() -> gr::high_res_timer_type"""
  return _mack_sdr_rossi_swig.high_res_timer_tps()

def high_res_timer_epoch():
  """high_res_timer_epoch() -> gr::high_res_timer_type"""
  return _mack_sdr_rossi_swig.high_res_timer_epoch()
class str_to_vec(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t N) -> str_to_vec_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::str_to_vec.

        To avoid accidental use of raw pointers, mack_sdr_rossi::str_to_vec's constructor is in a private implementation class. mack_sdr_rossi::str_to_vec::make is the public interface for creating new instances.

        Params: (N)
        """
        return _mack_sdr_rossi_swig.str_to_vec_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_str_to_vec
    __del__ = lambda self : None;
str_to_vec_swigregister = _mack_sdr_rossi_swig.str_to_vec_swigregister
str_to_vec_swigregister(str_to_vec)

def str_to_vec_make(*args, **kwargs):
  """
    str_to_vec_make(size_t N) -> str_to_vec_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::str_to_vec.

    To avoid accidental use of raw pointers, mack_sdr_rossi::str_to_vec's constructor is in a private implementation class. mack_sdr_rossi::str_to_vec::make is the public interface for creating new instances.

    Params: (N)
    """
  return _mack_sdr_rossi_swig.str_to_vec_make(*args, **kwargs)

class str_to_vec_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::str_to_vec)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::str_to_vec)> self) -> str_to_vec_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::str_to_vec)> self, str_to_vec p) -> str_to_vec_sptr
        """
        this = _mack_sdr_rossi_swig.new_str_to_vec_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(str_to_vec_sptr self) -> str_to_vec"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_str_to_vec_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(str_to_vec_sptr self, size_t N) -> str_to_vec_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::str_to_vec.

        To avoid accidental use of raw pointers, mack_sdr_rossi::str_to_vec's constructor is in a private implementation class. mack_sdr_rossi::str_to_vec::make is the public interface for creating new instances.

        Params: (N)
        """
        return _mack_sdr_rossi_swig.str_to_vec_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(str_to_vec_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(str_to_vec_sptr self, int which, int delay)
        declare_sample_delay(str_to_vec_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.str_to_vec_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(str_to_vec_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(str_to_vec_sptr self) -> int"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(str_to_vec_sptr self) -> double"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_relative_rate(self)

    def start(self):
        """start(str_to_vec_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_start(self)

    def stop(self):
        """stop(str_to_vec_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(str_to_vec_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(str_to_vec_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(str_to_vec_sptr self) -> int"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(str_to_vec_sptr self, int m)"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(str_to_vec_sptr self)"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(str_to_vec_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(str_to_vec_sptr self, int m)"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(str_to_vec_sptr self) -> int"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(str_to_vec_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(str_to_vec_sptr self, long max_output_buffer)
        set_max_output_buffer(str_to_vec_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.str_to_vec_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(str_to_vec_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(str_to_vec_sptr self, long min_output_buffer)
        set_min_output_buffer(str_to_vec_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.str_to_vec_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(str_to_vec_sptr self, int which) -> float
        pc_input_buffers_full(str_to_vec_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(str_to_vec_sptr self, int which) -> float
        pc_input_buffers_full_avg(str_to_vec_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(str_to_vec_sptr self, int which) -> float
        pc_input_buffers_full_var(str_to_vec_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(str_to_vec_sptr self, int which) -> float
        pc_output_buffers_full(str_to_vec_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(str_to_vec_sptr self, int which) -> float
        pc_output_buffers_full_avg(str_to_vec_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(str_to_vec_sptr self, int which) -> float
        pc_output_buffers_full_var(str_to_vec_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(str_to_vec_sptr self) -> float"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(str_to_vec_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(str_to_vec_sptr self)"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(str_to_vec_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(str_to_vec_sptr self) -> int"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(str_to_vec_sptr self) -> int"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(str_to_vec_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(str_to_vec_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_name(self)

    def symbol_name(self):
        """symbol_name(str_to_vec_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(str_to_vec_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(str_to_vec_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(str_to_vec_sptr self) -> long"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(str_to_vec_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(str_to_vec_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(str_to_vec_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(str_to_vec_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(str_to_vec_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(str_to_vec_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(str_to_vec_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(str_to_vec_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.str_to_vec_sptr_message_subscribers(self, *args, **kwargs)

str_to_vec_sptr_swigregister = _mack_sdr_rossi_swig.str_to_vec_sptr_swigregister
str_to_vec_sptr_swigregister(str_to_vec_sptr)

str_to_vec_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
str_to_vec = str_to_vec.make;

class BCH_decoder_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t N, size_t K) -> BCH_decoder_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::BCH_decoder_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::BCH_decoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::BCH_decoder_ATSC::make is the public interface for creating new instances.

        Params: (N, K)
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_BCH_decoder_ATSC
    __del__ = lambda self : None;
BCH_decoder_ATSC_swigregister = _mack_sdr_rossi_swig.BCH_decoder_ATSC_swigregister
BCH_decoder_ATSC_swigregister(BCH_decoder_ATSC)

def BCH_decoder_ATSC_make(*args, **kwargs):
  """
    BCH_decoder_ATSC_make(size_t N, size_t K) -> BCH_decoder_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::BCH_decoder_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::BCH_decoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::BCH_decoder_ATSC::make is the public interface for creating new instances.

    Params: (N, K)
    """
  return _mack_sdr_rossi_swig.BCH_decoder_ATSC_make(*args, **kwargs)

class BCH_decoder_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::BCH_decoder_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::BCH_decoder_ATSC)> self) -> BCH_decoder_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::BCH_decoder_ATSC)> self, BCH_decoder_ATSC p) -> BCH_decoder_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_BCH_decoder_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(BCH_decoder_ATSC_sptr self) -> BCH_decoder_ATSC"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_BCH_decoder_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(BCH_decoder_ATSC_sptr self, size_t N, size_t K) -> BCH_decoder_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::BCH_decoder_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::BCH_decoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::BCH_decoder_ATSC::make is the public interface for creating new instances.

        Params: (N, K)
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(BCH_decoder_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(BCH_decoder_ATSC_sptr self, int which, int delay)
        declare_sample_delay(BCH_decoder_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(BCH_decoder_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(BCH_decoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(BCH_decoder_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(BCH_decoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_start(self)

    def stop(self):
        """stop(BCH_decoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(BCH_decoder_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(BCH_decoder_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(BCH_decoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(BCH_decoder_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(BCH_decoder_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(BCH_decoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(BCH_decoder_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(BCH_decoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(BCH_decoder_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(BCH_decoder_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(BCH_decoder_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(BCH_decoder_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(BCH_decoder_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(BCH_decoder_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(BCH_decoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(BCH_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(BCH_decoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(BCH_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(BCH_decoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(BCH_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(BCH_decoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(BCH_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(BCH_decoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(BCH_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(BCH_decoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(BCH_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(BCH_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(BCH_decoder_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(BCH_decoder_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(BCH_decoder_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(BCH_decoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(BCH_decoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(BCH_decoder_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(BCH_decoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(BCH_decoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(BCH_decoder_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(BCH_decoder_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(BCH_decoder_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(BCH_decoder_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(BCH_decoder_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(BCH_decoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(BCH_decoder_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(BCH_decoder_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(BCH_decoder_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(BCH_decoder_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(BCH_decoder_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_message_subscribers(self, *args, **kwargs)

BCH_decoder_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.BCH_decoder_ATSC_sptr_swigregister
BCH_decoder_ATSC_sptr_swigregister(BCH_decoder_ATSC_sptr)

BCH_decoder_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
BCH_decoder_ATSC = BCH_decoder_ATSC.make;

class Demapper_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int size_in, int size_out, int rate, int mod_size, float var) -> Demapper_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Demapper_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Demapper_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Demapper_ATSC::make is the public interface for creating new instances.

        Params: (size_in, size_out, rate, mod_size, var)
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Demapper_ATSC
    __del__ = lambda self : None;
Demapper_ATSC_swigregister = _mack_sdr_rossi_swig.Demapper_ATSC_swigregister
Demapper_ATSC_swigregister(Demapper_ATSC)

def Demapper_ATSC_make(*args, **kwargs):
  """
    Demapper_ATSC_make(int size_in, int size_out, int rate, int mod_size, float var) -> Demapper_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::Demapper_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::Demapper_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Demapper_ATSC::make is the public interface for creating new instances.

    Params: (size_in, size_out, rate, mod_size, var)
    """
  return _mack_sdr_rossi_swig.Demapper_ATSC_make(*args, **kwargs)

class Demapper_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::Demapper_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Demapper_ATSC)> self) -> Demapper_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Demapper_ATSC)> self, Demapper_ATSC p) -> Demapper_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_Demapper_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Demapper_ATSC_sptr self) -> Demapper_ATSC"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Demapper_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(Demapper_ATSC_sptr self, int size_in, int size_out, int rate, int mod_size, float var) -> Demapper_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Demapper_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Demapper_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Demapper_ATSC::make is the public interface for creating new instances.

        Params: (size_in, size_out, rate, mod_size, var)
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(Demapper_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Demapper_ATSC_sptr self, int which, int delay)
        declare_sample_delay(Demapper_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Demapper_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Demapper_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Demapper_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(Demapper_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_start(self)

    def stop(self):
        """stop(Demapper_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Demapper_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Demapper_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Demapper_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Demapper_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Demapper_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Demapper_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Demapper_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Demapper_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Demapper_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Demapper_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(Demapper_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Demapper_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Demapper_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(Demapper_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Demapper_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(Demapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Demapper_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(Demapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Demapper_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(Demapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Demapper_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(Demapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Demapper_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(Demapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Demapper_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(Demapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Demapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Demapper_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Demapper_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Demapper_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Demapper_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Demapper_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Demapper_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Demapper_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Demapper_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Demapper_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Demapper_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Demapper_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Demapper_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Demapper_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Demapper_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Demapper_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Demapper_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Demapper_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Demapper_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Demapper_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Demapper_ATSC_sptr_message_subscribers(self, *args, **kwargs)

Demapper_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.Demapper_ATSC_sptr_swigregister
Demapper_ATSC_sptr_swigregister(Demapper_ATSC_sptr)

Demapper_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Demapper_ATSC = Demapper_ATSC.make;

class Parity_deinterleaver_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int Nldpc, int Rate) -> Parity_deinterleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Parity_deinterleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Parity_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Parity_deinterleaver_ATSC::make is the public interface for creating new instances.

        Params: (Nldpc, Rate)
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Parity_deinterleaver_ATSC
    __del__ = lambda self : None;
Parity_deinterleaver_ATSC_swigregister = _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_swigregister
Parity_deinterleaver_ATSC_swigregister(Parity_deinterleaver_ATSC)

def Parity_deinterleaver_ATSC_make(*args, **kwargs):
  """
    Parity_deinterleaver_ATSC_make(int Nldpc, int Rate) -> Parity_deinterleaver_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::Parity_deinterleaver_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::Parity_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Parity_deinterleaver_ATSC::make is the public interface for creating new instances.

    Params: (Nldpc, Rate)
    """
  return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_make(*args, **kwargs)

class Parity_deinterleaver_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::Parity_deinterleaver_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Parity_deinterleaver_ATSC)> self) -> Parity_deinterleaver_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Parity_deinterleaver_ATSC)> self, Parity_deinterleaver_ATSC p) -> Parity_deinterleaver_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_Parity_deinterleaver_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Parity_deinterleaver_ATSC_sptr self) -> Parity_deinterleaver_ATSC"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Parity_deinterleaver_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(Parity_deinterleaver_ATSC_sptr self, int Nldpc, int Rate) -> Parity_deinterleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Parity_deinterleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Parity_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Parity_deinterleaver_ATSC::make is the public interface for creating new instances.

        Params: (Nldpc, Rate)
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(Parity_deinterleaver_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Parity_deinterleaver_ATSC_sptr self, int which, int delay)
        declare_sample_delay(Parity_deinterleaver_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Parity_deinterleaver_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Parity_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Parity_deinterleaver_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(Parity_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_start(self)

    def stop(self):
        """stop(Parity_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Parity_deinterleaver_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Parity_deinterleaver_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Parity_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Parity_deinterleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Parity_deinterleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Parity_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Parity_deinterleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Parity_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Parity_deinterleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Parity_deinterleaver_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(Parity_deinterleaver_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Parity_deinterleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Parity_deinterleaver_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(Parity_deinterleaver_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Parity_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(Parity_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Parity_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(Parity_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Parity_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(Parity_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Parity_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(Parity_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Parity_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(Parity_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Parity_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(Parity_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Parity_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Parity_deinterleaver_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Parity_deinterleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Parity_deinterleaver_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Parity_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Parity_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Parity_deinterleaver_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Parity_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Parity_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Parity_deinterleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Parity_deinterleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Parity_deinterleaver_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Parity_deinterleaver_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Parity_deinterleaver_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Parity_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Parity_deinterleaver_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Parity_deinterleaver_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Parity_deinterleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Parity_deinterleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Parity_deinterleaver_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_message_subscribers(self, *args, **kwargs)

Parity_deinterleaver_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.Parity_deinterleaver_ATSC_sptr_swigregister
Parity_deinterleaver_ATSC_sptr_swigregister(Parity_deinterleaver_ATSC_sptr)

Parity_deinterleaver_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Parity_deinterleaver_ATSC = Parity_deinterleaver_ATSC.make;

class Block_deinterleaver_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int Nldpc, int Rate, int Mod_size) -> Block_deinterleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Block_deinterleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Block_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Block_deinterleaver_ATSC::make is the public interface for creating new instances.

        Params: (Nldpc, Rate, Mod_size)
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Block_deinterleaver_ATSC
    __del__ = lambda self : None;
Block_deinterleaver_ATSC_swigregister = _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_swigregister
Block_deinterleaver_ATSC_swigregister(Block_deinterleaver_ATSC)

def Block_deinterleaver_ATSC_make(*args, **kwargs):
  """
    Block_deinterleaver_ATSC_make(int Nldpc, int Rate, int Mod_size) -> Block_deinterleaver_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::Block_deinterleaver_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::Block_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Block_deinterleaver_ATSC::make is the public interface for creating new instances.

    Params: (Nldpc, Rate, Mod_size)
    """
  return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_make(*args, **kwargs)

class Block_deinterleaver_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::Block_deinterleaver_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Block_deinterleaver_ATSC)> self) -> Block_deinterleaver_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Block_deinterleaver_ATSC)> self, Block_deinterleaver_ATSC p) -> Block_deinterleaver_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_Block_deinterleaver_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Block_deinterleaver_ATSC_sptr self) -> Block_deinterleaver_ATSC"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Block_deinterleaver_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(Block_deinterleaver_ATSC_sptr self, int Nldpc, int Rate, int Mod_size) -> Block_deinterleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Block_deinterleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Block_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Block_deinterleaver_ATSC::make is the public interface for creating new instances.

        Params: (Nldpc, Rate, Mod_size)
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(Block_deinterleaver_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Block_deinterleaver_ATSC_sptr self, int which, int delay)
        declare_sample_delay(Block_deinterleaver_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Block_deinterleaver_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Block_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Block_deinterleaver_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(Block_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_start(self)

    def stop(self):
        """stop(Block_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Block_deinterleaver_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Block_deinterleaver_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Block_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Block_deinterleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Block_deinterleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Block_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Block_deinterleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Block_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Block_deinterleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Block_deinterleaver_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(Block_deinterleaver_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Block_deinterleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Block_deinterleaver_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(Block_deinterleaver_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Block_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(Block_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Block_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(Block_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Block_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(Block_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Block_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(Block_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Block_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(Block_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Block_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(Block_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Block_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Block_deinterleaver_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Block_deinterleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Block_deinterleaver_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Block_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Block_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Block_deinterleaver_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Block_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Block_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Block_deinterleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Block_deinterleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Block_deinterleaver_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Block_deinterleaver_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Block_deinterleaver_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Block_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Block_deinterleaver_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Block_deinterleaver_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Block_deinterleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Block_deinterleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Block_deinterleaver_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_message_subscribers(self, *args, **kwargs)

Block_deinterleaver_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.Block_deinterleaver_ATSC_sptr_swigregister
Block_deinterleaver_ATSC_sptr_swigregister(Block_deinterleaver_ATSC_sptr)

Block_deinterleaver_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Block_deinterleaver_ATSC = Block_deinterleaver_ATSC.make;

class Group_deinterleaver_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int Nldpc, int Rate, int Mod_size) -> Group_deinterleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Group_deinterleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Group_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Group_deinterleaver_ATSC::make is the public interface for creating new instances.

        Params: (Nldpc, Rate, Mod_size)
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Group_deinterleaver_ATSC
    __del__ = lambda self : None;
Group_deinterleaver_ATSC_swigregister = _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_swigregister
Group_deinterleaver_ATSC_swigregister(Group_deinterleaver_ATSC)

def Group_deinterleaver_ATSC_make(*args, **kwargs):
  """
    Group_deinterleaver_ATSC_make(int Nldpc, int Rate, int Mod_size) -> Group_deinterleaver_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::Group_deinterleaver_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::Group_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Group_deinterleaver_ATSC::make is the public interface for creating new instances.

    Params: (Nldpc, Rate, Mod_size)
    """
  return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_make(*args, **kwargs)

class Group_deinterleaver_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::Group_deinterleaver_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Group_deinterleaver_ATSC)> self) -> Group_deinterleaver_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Group_deinterleaver_ATSC)> self, Group_deinterleaver_ATSC p) -> Group_deinterleaver_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_Group_deinterleaver_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Group_deinterleaver_ATSC_sptr self) -> Group_deinterleaver_ATSC"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Group_deinterleaver_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(Group_deinterleaver_ATSC_sptr self, int Nldpc, int Rate, int Mod_size) -> Group_deinterleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Group_deinterleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Group_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Group_deinterleaver_ATSC::make is the public interface for creating new instances.

        Params: (Nldpc, Rate, Mod_size)
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(Group_deinterleaver_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Group_deinterleaver_ATSC_sptr self, int which, int delay)
        declare_sample_delay(Group_deinterleaver_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Group_deinterleaver_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Group_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Group_deinterleaver_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(Group_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_start(self)

    def stop(self):
        """stop(Group_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Group_deinterleaver_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Group_deinterleaver_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Group_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Group_deinterleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Group_deinterleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Group_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Group_deinterleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Group_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Group_deinterleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Group_deinterleaver_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(Group_deinterleaver_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Group_deinterleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Group_deinterleaver_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(Group_deinterleaver_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Group_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(Group_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Group_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(Group_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Group_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(Group_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Group_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(Group_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Group_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(Group_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Group_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(Group_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Group_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Group_deinterleaver_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Group_deinterleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Group_deinterleaver_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Group_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Group_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Group_deinterleaver_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Group_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Group_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Group_deinterleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Group_deinterleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Group_deinterleaver_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Group_deinterleaver_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Group_deinterleaver_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Group_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Group_deinterleaver_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Group_deinterleaver_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Group_deinterleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Group_deinterleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Group_deinterleaver_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_message_subscribers(self, *args, **kwargs)

Group_deinterleaver_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.Group_deinterleaver_ATSC_sptr_swigregister
Group_deinterleaver_ATSC_sptr_swigregister(Group_deinterleaver_ATSC_sptr)

Group_deinterleaver_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Group_deinterleaver_ATSC = Group_deinterleaver_ATSC.make;

class LDPC_decoder_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(int N_in, int N_out) -> LDPC_decoder_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::LDPC_decoder_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::LDPC_decoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::LDPC_decoder_ATSC::make is the public interface for creating new instances.

        Params: (N_in, N_out)
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_LDPC_decoder_ATSC
    __del__ = lambda self : None;
LDPC_decoder_ATSC_swigregister = _mack_sdr_rossi_swig.LDPC_decoder_ATSC_swigregister
LDPC_decoder_ATSC_swigregister(LDPC_decoder_ATSC)

def LDPC_decoder_ATSC_make(*args, **kwargs):
  """
    LDPC_decoder_ATSC_make(int N_in, int N_out) -> LDPC_decoder_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::LDPC_decoder_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::LDPC_decoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::LDPC_decoder_ATSC::make is the public interface for creating new instances.

    Params: (N_in, N_out)
    """
  return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_make(*args, **kwargs)

class LDPC_decoder_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::LDPC_decoder_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::LDPC_decoder_ATSC)> self) -> LDPC_decoder_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::LDPC_decoder_ATSC)> self, LDPC_decoder_ATSC p) -> LDPC_decoder_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_LDPC_decoder_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(LDPC_decoder_ATSC_sptr self) -> LDPC_decoder_ATSC"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_LDPC_decoder_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(LDPC_decoder_ATSC_sptr self, int N_in, int N_out) -> LDPC_decoder_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::LDPC_decoder_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::LDPC_decoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::LDPC_decoder_ATSC::make is the public interface for creating new instances.

        Params: (N_in, N_out)
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(LDPC_decoder_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(LDPC_decoder_ATSC_sptr self, int which, int delay)
        declare_sample_delay(LDPC_decoder_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(LDPC_decoder_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(LDPC_decoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(LDPC_decoder_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(LDPC_decoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_start(self)

    def stop(self):
        """stop(LDPC_decoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(LDPC_decoder_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(LDPC_decoder_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(LDPC_decoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(LDPC_decoder_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(LDPC_decoder_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(LDPC_decoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(LDPC_decoder_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(LDPC_decoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(LDPC_decoder_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(LDPC_decoder_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(LDPC_decoder_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(LDPC_decoder_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(LDPC_decoder_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(LDPC_decoder_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(LDPC_decoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(LDPC_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(LDPC_decoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(LDPC_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(LDPC_decoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(LDPC_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(LDPC_decoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(LDPC_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(LDPC_decoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(LDPC_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(LDPC_decoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(LDPC_decoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(LDPC_decoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(LDPC_decoder_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(LDPC_decoder_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(LDPC_decoder_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(LDPC_decoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(LDPC_decoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(LDPC_decoder_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(LDPC_decoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(LDPC_decoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(LDPC_decoder_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(LDPC_decoder_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(LDPC_decoder_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(LDPC_decoder_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(LDPC_decoder_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(LDPC_decoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(LDPC_decoder_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(LDPC_decoder_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(LDPC_decoder_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(LDPC_decoder_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(LDPC_decoder_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_message_subscribers(self, *args, **kwargs)

LDPC_decoder_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.LDPC_decoder_ATSC_sptr_swigregister
LDPC_decoder_ATSC_sptr_swigregister(LDPC_decoder_ATSC_sptr)

LDPC_decoder_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
LDPC_decoder_ATSC = LDPC_decoder_ATSC.make;

class LDPC_decoder_hard_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t N_in, size_t N_out) -> LDPC_decoder_hard_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::LDPC_decoder_hard_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::LDPC_decoder_hard_ATSC's constructor is in a private implementation class. mack_sdr_rossi::LDPC_decoder_hard_ATSC::make is the public interface for creating new instances.

        Params: (N_in, N_out)
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_LDPC_decoder_hard_ATSC
    __del__ = lambda self : None;
LDPC_decoder_hard_ATSC_swigregister = _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_swigregister
LDPC_decoder_hard_ATSC_swigregister(LDPC_decoder_hard_ATSC)

def LDPC_decoder_hard_ATSC_make(*args, **kwargs):
  """
    LDPC_decoder_hard_ATSC_make(size_t N_in, size_t N_out) -> LDPC_decoder_hard_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::LDPC_decoder_hard_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::LDPC_decoder_hard_ATSC's constructor is in a private implementation class. mack_sdr_rossi::LDPC_decoder_hard_ATSC::make is the public interface for creating new instances.

    Params: (N_in, N_out)
    """
  return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_make(*args, **kwargs)

class LDPC_decoder_hard_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::LDPC_decoder_hard_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::LDPC_decoder_hard_ATSC)> self) -> LDPC_decoder_hard_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::LDPC_decoder_hard_ATSC)> self, LDPC_decoder_hard_ATSC p) -> LDPC_decoder_hard_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_LDPC_decoder_hard_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(LDPC_decoder_hard_ATSC_sptr self) -> LDPC_decoder_hard_ATSC"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_LDPC_decoder_hard_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(LDPC_decoder_hard_ATSC_sptr self, size_t N_in, size_t N_out) -> LDPC_decoder_hard_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::LDPC_decoder_hard_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::LDPC_decoder_hard_ATSC's constructor is in a private implementation class. mack_sdr_rossi::LDPC_decoder_hard_ATSC::make is the public interface for creating new instances.

        Params: (N_in, N_out)
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(LDPC_decoder_hard_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(LDPC_decoder_hard_ATSC_sptr self, int which, int delay)
        declare_sample_delay(LDPC_decoder_hard_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(LDPC_decoder_hard_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(LDPC_decoder_hard_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(LDPC_decoder_hard_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(LDPC_decoder_hard_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_start(self)

    def stop(self):
        """stop(LDPC_decoder_hard_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(LDPC_decoder_hard_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(LDPC_decoder_hard_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(LDPC_decoder_hard_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(LDPC_decoder_hard_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(LDPC_decoder_hard_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(LDPC_decoder_hard_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(LDPC_decoder_hard_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(LDPC_decoder_hard_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(LDPC_decoder_hard_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(LDPC_decoder_hard_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(LDPC_decoder_hard_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(LDPC_decoder_hard_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(LDPC_decoder_hard_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(LDPC_decoder_hard_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(LDPC_decoder_hard_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(LDPC_decoder_hard_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(LDPC_decoder_hard_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(LDPC_decoder_hard_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(LDPC_decoder_hard_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(LDPC_decoder_hard_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(LDPC_decoder_hard_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(LDPC_decoder_hard_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(LDPC_decoder_hard_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(LDPC_decoder_hard_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(LDPC_decoder_hard_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(LDPC_decoder_hard_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(LDPC_decoder_hard_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(LDPC_decoder_hard_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(LDPC_decoder_hard_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(LDPC_decoder_hard_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(LDPC_decoder_hard_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(LDPC_decoder_hard_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(LDPC_decoder_hard_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(LDPC_decoder_hard_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(LDPC_decoder_hard_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(LDPC_decoder_hard_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(LDPC_decoder_hard_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(LDPC_decoder_hard_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(LDPC_decoder_hard_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(LDPC_decoder_hard_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(LDPC_decoder_hard_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(LDPC_decoder_hard_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(LDPC_decoder_hard_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(LDPC_decoder_hard_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(LDPC_decoder_hard_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(LDPC_decoder_hard_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_message_subscribers(self, *args, **kwargs)

LDPC_decoder_hard_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.LDPC_decoder_hard_ATSC_sptr_swigregister
LDPC_decoder_hard_ATSC_sptr_swigregister(LDPC_decoder_hard_ATSC_sptr)

LDPC_decoder_hard_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
LDPC_decoder_hard_ATSC = LDPC_decoder_hard_ATSC.make;

class BCH_encoder_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t K, size_t N) -> BCH_encoder_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::BCH_encoder_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::BCH_encoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::BCH_encoder_ATSC::make is the public interface for creating new instances.

        Params: (K, N)
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_BCH_encoder_ATSC
    __del__ = lambda self : None;
BCH_encoder_ATSC_swigregister = _mack_sdr_rossi_swig.BCH_encoder_ATSC_swigregister
BCH_encoder_ATSC_swigregister(BCH_encoder_ATSC)

def BCH_encoder_ATSC_make(*args, **kwargs):
  """
    BCH_encoder_ATSC_make(size_t K, size_t N) -> BCH_encoder_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::BCH_encoder_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::BCH_encoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::BCH_encoder_ATSC::make is the public interface for creating new instances.

    Params: (K, N)
    """
  return _mack_sdr_rossi_swig.BCH_encoder_ATSC_make(*args, **kwargs)

class BCH_encoder_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::BCH_encoder_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::BCH_encoder_ATSC)> self) -> BCH_encoder_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::BCH_encoder_ATSC)> self, BCH_encoder_ATSC p) -> BCH_encoder_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_BCH_encoder_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(BCH_encoder_ATSC_sptr self) -> BCH_encoder_ATSC"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_BCH_encoder_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(BCH_encoder_ATSC_sptr self, size_t K, size_t N) -> BCH_encoder_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::BCH_encoder_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::BCH_encoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::BCH_encoder_ATSC::make is the public interface for creating new instances.

        Params: (K, N)
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(BCH_encoder_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(BCH_encoder_ATSC_sptr self, int which, int delay)
        declare_sample_delay(BCH_encoder_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(BCH_encoder_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(BCH_encoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(BCH_encoder_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(BCH_encoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_start(self)

    def stop(self):
        """stop(BCH_encoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(BCH_encoder_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(BCH_encoder_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(BCH_encoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(BCH_encoder_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(BCH_encoder_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(BCH_encoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(BCH_encoder_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(BCH_encoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(BCH_encoder_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(BCH_encoder_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(BCH_encoder_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(BCH_encoder_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(BCH_encoder_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(BCH_encoder_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(BCH_encoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(BCH_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(BCH_encoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(BCH_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(BCH_encoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(BCH_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(BCH_encoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(BCH_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(BCH_encoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(BCH_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(BCH_encoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(BCH_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(BCH_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(BCH_encoder_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(BCH_encoder_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(BCH_encoder_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(BCH_encoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(BCH_encoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(BCH_encoder_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(BCH_encoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(BCH_encoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(BCH_encoder_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(BCH_encoder_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(BCH_encoder_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(BCH_encoder_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(BCH_encoder_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(BCH_encoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(BCH_encoder_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(BCH_encoder_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(BCH_encoder_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(BCH_encoder_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(BCH_encoder_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_message_subscribers(self, *args, **kwargs)

BCH_encoder_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.BCH_encoder_ATSC_sptr_swigregister
BCH_encoder_ATSC_sptr_swigregister(BCH_encoder_ATSC_sptr)

BCH_encoder_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
BCH_encoder_ATSC = BCH_encoder_ATSC.make;

class LDPC_encoder_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t K_ldpc, size_t N_ldpc, int rate) -> LDPC_encoder_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::LDPC_encoder_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::LDPC_encoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::LDPC_encoder_ATSC::make is the public interface for creating new instances.

        Params: (K_ldpc, N_ldpc, rate)
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_LDPC_encoder_ATSC
    __del__ = lambda self : None;
LDPC_encoder_ATSC_swigregister = _mack_sdr_rossi_swig.LDPC_encoder_ATSC_swigregister
LDPC_encoder_ATSC_swigregister(LDPC_encoder_ATSC)

def LDPC_encoder_ATSC_make(*args, **kwargs):
  """
    LDPC_encoder_ATSC_make(size_t K_ldpc, size_t N_ldpc, int rate) -> LDPC_encoder_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::LDPC_encoder_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::LDPC_encoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::LDPC_encoder_ATSC::make is the public interface for creating new instances.

    Params: (K_ldpc, N_ldpc, rate)
    """
  return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_make(*args, **kwargs)

class LDPC_encoder_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::LDPC_encoder_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::LDPC_encoder_ATSC)> self) -> LDPC_encoder_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::LDPC_encoder_ATSC)> self, LDPC_encoder_ATSC p) -> LDPC_encoder_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_LDPC_encoder_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(LDPC_encoder_ATSC_sptr self) -> LDPC_encoder_ATSC"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_LDPC_encoder_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(LDPC_encoder_ATSC_sptr self, size_t K_ldpc, size_t N_ldpc, int rate) -> LDPC_encoder_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::LDPC_encoder_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::LDPC_encoder_ATSC's constructor is in a private implementation class. mack_sdr_rossi::LDPC_encoder_ATSC::make is the public interface for creating new instances.

        Params: (K_ldpc, N_ldpc, rate)
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(LDPC_encoder_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(LDPC_encoder_ATSC_sptr self, int which, int delay)
        declare_sample_delay(LDPC_encoder_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(LDPC_encoder_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(LDPC_encoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(LDPC_encoder_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(LDPC_encoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_start(self)

    def stop(self):
        """stop(LDPC_encoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(LDPC_encoder_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(LDPC_encoder_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(LDPC_encoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(LDPC_encoder_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(LDPC_encoder_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(LDPC_encoder_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(LDPC_encoder_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(LDPC_encoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(LDPC_encoder_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(LDPC_encoder_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(LDPC_encoder_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(LDPC_encoder_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(LDPC_encoder_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(LDPC_encoder_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(LDPC_encoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(LDPC_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(LDPC_encoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(LDPC_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(LDPC_encoder_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(LDPC_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(LDPC_encoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(LDPC_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(LDPC_encoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(LDPC_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(LDPC_encoder_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(LDPC_encoder_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(LDPC_encoder_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(LDPC_encoder_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(LDPC_encoder_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(LDPC_encoder_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(LDPC_encoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(LDPC_encoder_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(LDPC_encoder_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(LDPC_encoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(LDPC_encoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(LDPC_encoder_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(LDPC_encoder_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(LDPC_encoder_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(LDPC_encoder_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(LDPC_encoder_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(LDPC_encoder_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(LDPC_encoder_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(LDPC_encoder_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(LDPC_encoder_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(LDPC_encoder_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(LDPC_encoder_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_message_subscribers(self, *args, **kwargs)

LDPC_encoder_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.LDPC_encoder_ATSC_sptr_swigregister
LDPC_encoder_ATSC_sptr_swigregister(LDPC_encoder_ATSC_sptr)

LDPC_encoder_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
LDPC_encoder_ATSC = LDPC_encoder_ATSC.make;

class Block_interleaver_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t Size, int Rate, int Mod) -> Block_interleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Block_interleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Block_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Block_interleaver_ATSC::make is the public interface for creating new instances.

        Params: (Size, Rate, Mod)
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Block_interleaver_ATSC
    __del__ = lambda self : None;
Block_interleaver_ATSC_swigregister = _mack_sdr_rossi_swig.Block_interleaver_ATSC_swigregister
Block_interleaver_ATSC_swigregister(Block_interleaver_ATSC)

def Block_interleaver_ATSC_make(*args, **kwargs):
  """
    Block_interleaver_ATSC_make(size_t Size, int Rate, int Mod) -> Block_interleaver_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::Block_interleaver_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::Block_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Block_interleaver_ATSC::make is the public interface for creating new instances.

    Params: (Size, Rate, Mod)
    """
  return _mack_sdr_rossi_swig.Block_interleaver_ATSC_make(*args, **kwargs)

class Block_interleaver_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::Block_interleaver_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Block_interleaver_ATSC)> self) -> Block_interleaver_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Block_interleaver_ATSC)> self, Block_interleaver_ATSC p) -> Block_interleaver_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_Block_interleaver_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Block_interleaver_ATSC_sptr self) -> Block_interleaver_ATSC"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Block_interleaver_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(Block_interleaver_ATSC_sptr self, size_t Size, int Rate, int Mod) -> Block_interleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Block_interleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Block_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Block_interleaver_ATSC::make is the public interface for creating new instances.

        Params: (Size, Rate, Mod)
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(Block_interleaver_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Block_interleaver_ATSC_sptr self, int which, int delay)
        declare_sample_delay(Block_interleaver_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Block_interleaver_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Block_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Block_interleaver_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(Block_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_start(self)

    def stop(self):
        """stop(Block_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Block_interleaver_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Block_interleaver_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Block_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Block_interleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Block_interleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Block_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Block_interleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Block_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Block_interleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Block_interleaver_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(Block_interleaver_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Block_interleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Block_interleaver_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(Block_interleaver_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Block_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(Block_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Block_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(Block_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Block_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(Block_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Block_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(Block_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Block_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(Block_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Block_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(Block_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Block_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Block_interleaver_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Block_interleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Block_interleaver_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Block_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Block_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Block_interleaver_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Block_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Block_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Block_interleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Block_interleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Block_interleaver_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Block_interleaver_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Block_interleaver_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Block_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Block_interleaver_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Block_interleaver_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Block_interleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Block_interleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Block_interleaver_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_message_subscribers(self, *args, **kwargs)

Block_interleaver_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.Block_interleaver_ATSC_sptr_swigregister
Block_interleaver_ATSC_sptr_swigregister(Block_interleaver_ATSC_sptr)

Block_interleaver_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Block_interleaver_ATSC = Block_interleaver_ATSC.make;

class Group_interleaver_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t Size, int Rate, int Mod) -> Group_interleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Group_interleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Group_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Group_interleaver_ATSC::make is the public interface for creating new instances.

        Params: (Size, Rate, Mod)
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Group_interleaver_ATSC
    __del__ = lambda self : None;
Group_interleaver_ATSC_swigregister = _mack_sdr_rossi_swig.Group_interleaver_ATSC_swigregister
Group_interleaver_ATSC_swigregister(Group_interleaver_ATSC)

def Group_interleaver_ATSC_make(*args, **kwargs):
  """
    Group_interleaver_ATSC_make(size_t Size, int Rate, int Mod) -> Group_interleaver_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::Group_interleaver_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::Group_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Group_interleaver_ATSC::make is the public interface for creating new instances.

    Params: (Size, Rate, Mod)
    """
  return _mack_sdr_rossi_swig.Group_interleaver_ATSC_make(*args, **kwargs)

class Group_interleaver_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::Group_interleaver_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Group_interleaver_ATSC)> self) -> Group_interleaver_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Group_interleaver_ATSC)> self, Group_interleaver_ATSC p) -> Group_interleaver_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_Group_interleaver_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Group_interleaver_ATSC_sptr self) -> Group_interleaver_ATSC"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Group_interleaver_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(Group_interleaver_ATSC_sptr self, size_t Size, int Rate, int Mod) -> Group_interleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Group_interleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Group_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Group_interleaver_ATSC::make is the public interface for creating new instances.

        Params: (Size, Rate, Mod)
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(Group_interleaver_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Group_interleaver_ATSC_sptr self, int which, int delay)
        declare_sample_delay(Group_interleaver_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Group_interleaver_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Group_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Group_interleaver_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(Group_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_start(self)

    def stop(self):
        """stop(Group_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Group_interleaver_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Group_interleaver_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Group_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Group_interleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Group_interleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Group_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Group_interleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Group_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Group_interleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Group_interleaver_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(Group_interleaver_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Group_interleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Group_interleaver_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(Group_interleaver_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Group_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(Group_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Group_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(Group_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Group_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(Group_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Group_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(Group_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Group_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(Group_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Group_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(Group_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Group_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Group_interleaver_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Group_interleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Group_interleaver_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Group_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Group_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Group_interleaver_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Group_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Group_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Group_interleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Group_interleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Group_interleaver_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Group_interleaver_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Group_interleaver_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Group_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Group_interleaver_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Group_interleaver_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Group_interleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Group_interleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Group_interleaver_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_message_subscribers(self, *args, **kwargs)

Group_interleaver_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.Group_interleaver_ATSC_sptr_swigregister
Group_interleaver_ATSC_sptr_swigregister(Group_interleaver_ATSC_sptr)

Group_interleaver_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Group_interleaver_ATSC = Group_interleaver_ATSC.make;

class Parity_interleaver_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t Size, int Rate) -> Parity_interleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Parity_interleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Parity_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Parity_interleaver_ATSC::make is the public interface for creating new instances.

        Params: (Size, Rate)
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Parity_interleaver_ATSC
    __del__ = lambda self : None;
Parity_interleaver_ATSC_swigregister = _mack_sdr_rossi_swig.Parity_interleaver_ATSC_swigregister
Parity_interleaver_ATSC_swigregister(Parity_interleaver_ATSC)

def Parity_interleaver_ATSC_make(*args, **kwargs):
  """
    Parity_interleaver_ATSC_make(size_t Size, int Rate) -> Parity_interleaver_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::Parity_interleaver_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::Parity_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Parity_interleaver_ATSC::make is the public interface for creating new instances.

    Params: (Size, Rate)
    """
  return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_make(*args, **kwargs)

class Parity_interleaver_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::Parity_interleaver_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Parity_interleaver_ATSC)> self) -> Parity_interleaver_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Parity_interleaver_ATSC)> self, Parity_interleaver_ATSC p) -> Parity_interleaver_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_Parity_interleaver_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Parity_interleaver_ATSC_sptr self) -> Parity_interleaver_ATSC"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Parity_interleaver_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(Parity_interleaver_ATSC_sptr self, size_t Size, int Rate) -> Parity_interleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Parity_interleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Parity_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Parity_interleaver_ATSC::make is the public interface for creating new instances.

        Params: (Size, Rate)
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(Parity_interleaver_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Parity_interleaver_ATSC_sptr self, int which, int delay)
        declare_sample_delay(Parity_interleaver_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Parity_interleaver_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Parity_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Parity_interleaver_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(Parity_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_start(self)

    def stop(self):
        """stop(Parity_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Parity_interleaver_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Parity_interleaver_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Parity_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Parity_interleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Parity_interleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Parity_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Parity_interleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Parity_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Parity_interleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Parity_interleaver_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(Parity_interleaver_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Parity_interleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Parity_interleaver_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(Parity_interleaver_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Parity_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(Parity_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Parity_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(Parity_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Parity_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(Parity_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Parity_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(Parity_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Parity_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(Parity_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Parity_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(Parity_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Parity_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Parity_interleaver_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Parity_interleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Parity_interleaver_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Parity_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Parity_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Parity_interleaver_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Parity_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Parity_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Parity_interleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Parity_interleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Parity_interleaver_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Parity_interleaver_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Parity_interleaver_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Parity_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Parity_interleaver_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Parity_interleaver_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Parity_interleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Parity_interleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Parity_interleaver_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_message_subscribers(self, *args, **kwargs)

Parity_interleaver_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.Parity_interleaver_ATSC_sptr_swigregister
Parity_interleaver_ATSC_sptr_swigregister(Parity_interleaver_ATSC_sptr)

Parity_interleaver_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Parity_interleaver_ATSC = Parity_interleaver_ATSC.make;

class Mapper_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t N_ldpc, int Rate, int Mod_size) -> Mapper_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Mapper_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Mapper_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Mapper_ATSC::make is the public interface for creating new instances.

        Params: (N_ldpc, Rate, Mod_size)
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Mapper_ATSC
    __del__ = lambda self : None;
Mapper_ATSC_swigregister = _mack_sdr_rossi_swig.Mapper_ATSC_swigregister
Mapper_ATSC_swigregister(Mapper_ATSC)

def Mapper_ATSC_make(*args, **kwargs):
  """
    Mapper_ATSC_make(size_t N_ldpc, int Rate, int Mod_size) -> Mapper_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::Mapper_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::Mapper_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Mapper_ATSC::make is the public interface for creating new instances.

    Params: (N_ldpc, Rate, Mod_size)
    """
  return _mack_sdr_rossi_swig.Mapper_ATSC_make(*args, **kwargs)

class Mapper_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::Mapper_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Mapper_ATSC)> self) -> Mapper_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Mapper_ATSC)> self, Mapper_ATSC p) -> Mapper_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_Mapper_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Mapper_ATSC_sptr self) -> Mapper_ATSC"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Mapper_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(Mapper_ATSC_sptr self, size_t N_ldpc, int Rate, int Mod_size) -> Mapper_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Mapper_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Mapper_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Mapper_ATSC::make is the public interface for creating new instances.

        Params: (N_ldpc, Rate, Mod_size)
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(Mapper_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Mapper_ATSC_sptr self, int which, int delay)
        declare_sample_delay(Mapper_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Mapper_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Mapper_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Mapper_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(Mapper_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_start(self)

    def stop(self):
        """stop(Mapper_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Mapper_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Mapper_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Mapper_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Mapper_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Mapper_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Mapper_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Mapper_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Mapper_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Mapper_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Mapper_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(Mapper_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Mapper_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Mapper_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(Mapper_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Mapper_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(Mapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Mapper_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(Mapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Mapper_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(Mapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Mapper_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(Mapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Mapper_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(Mapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Mapper_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(Mapper_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Mapper_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Mapper_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Mapper_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Mapper_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Mapper_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Mapper_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Mapper_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Mapper_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Mapper_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Mapper_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Mapper_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Mapper_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Mapper_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Mapper_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Mapper_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Mapper_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Mapper_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Mapper_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Mapper_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Mapper_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Mapper_ATSC_sptr_message_subscribers(self, *args, **kwargs)

Mapper_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.Mapper_ATSC_sptr_swigregister
Mapper_ATSC_sptr_swigregister(Mapper_ATSC_sptr)

Mapper_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Mapper_ATSC = Mapper_ATSC.make;

class Bit_interleaver_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t ldpc_size, int rate, int mod) -> Bit_interleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Bit_interleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Bit_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Bit_interleaver_ATSC::make is the public interface for creating new instances.

        Params: (ldpc_size, rate, mod)
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Bit_interleaver_ATSC
    __del__ = lambda self : None;
Bit_interleaver_ATSC_swigregister = _mack_sdr_rossi_swig.Bit_interleaver_ATSC_swigregister
Bit_interleaver_ATSC_swigregister(Bit_interleaver_ATSC)

def Bit_interleaver_ATSC_make(*args, **kwargs):
  """
    Bit_interleaver_ATSC_make(size_t ldpc_size, int rate, int mod) -> Bit_interleaver_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::Bit_interleaver_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::Bit_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Bit_interleaver_ATSC::make is the public interface for creating new instances.

    Params: (ldpc_size, rate, mod)
    """
  return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_make(*args, **kwargs)

class Bit_interleaver_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::Bit_interleaver_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Bit_interleaver_ATSC)> self) -> Bit_interleaver_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Bit_interleaver_ATSC)> self, Bit_interleaver_ATSC p) -> Bit_interleaver_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_Bit_interleaver_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Bit_interleaver_ATSC_sptr self) -> Bit_interleaver_ATSC"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Bit_interleaver_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(Bit_interleaver_ATSC_sptr self, size_t ldpc_size, int rate, int mod) -> Bit_interleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Bit_interleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Bit_interleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Bit_interleaver_ATSC::make is the public interface for creating new instances.

        Params: (ldpc_size, rate, mod)
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(Bit_interleaver_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Bit_interleaver_ATSC_sptr self, int which, int delay)
        declare_sample_delay(Bit_interleaver_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Bit_interleaver_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Bit_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Bit_interleaver_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(Bit_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_start(self)

    def stop(self):
        """stop(Bit_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Bit_interleaver_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Bit_interleaver_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Bit_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Bit_interleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Bit_interleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Bit_interleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Bit_interleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Bit_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Bit_interleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Bit_interleaver_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(Bit_interleaver_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Bit_interleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Bit_interleaver_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(Bit_interleaver_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Bit_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(Bit_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Bit_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(Bit_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Bit_interleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(Bit_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Bit_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(Bit_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Bit_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(Bit_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Bit_interleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(Bit_interleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Bit_interleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Bit_interleaver_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Bit_interleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Bit_interleaver_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Bit_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Bit_interleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Bit_interleaver_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Bit_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Bit_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Bit_interleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Bit_interleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Bit_interleaver_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Bit_interleaver_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Bit_interleaver_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Bit_interleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Bit_interleaver_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Bit_interleaver_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Bit_interleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Bit_interleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Bit_interleaver_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_message_subscribers(self, *args, **kwargs)

Bit_interleaver_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.Bit_interleaver_ATSC_sptr_swigregister
Bit_interleaver_ATSC_sptr_swigregister(Bit_interleaver_ATSC_sptr)

Bit_interleaver_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Bit_interleaver_ATSC = Bit_interleaver_ATSC.make;

class Bit_deinterleaver_ATSC(object):
    """<+description of block+>"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def make(*args, **kwargs):
        """
        make(size_t ldpc_size, int rate, int mod) -> Bit_deinterleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Bit_deinterleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Bit_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Bit_deinterleaver_ATSC::make is the public interface for creating new instances.

        Params: (ldpc_size, rate, mod)
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_make(*args, **kwargs)

    make = staticmethod(make)
    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Bit_deinterleaver_ATSC
    __del__ = lambda self : None;
Bit_deinterleaver_ATSC_swigregister = _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_swigregister
Bit_deinterleaver_ATSC_swigregister(Bit_deinterleaver_ATSC)

def Bit_deinterleaver_ATSC_make(*args, **kwargs):
  """
    Bit_deinterleaver_ATSC_make(size_t ldpc_size, int rate, int mod) -> Bit_deinterleaver_ATSC_sptr

    Return a shared_ptr to a new instance of mack_sdr_rossi::Bit_deinterleaver_ATSC.

    To avoid accidental use of raw pointers, mack_sdr_rossi::Bit_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Bit_deinterleaver_ATSC::make is the public interface for creating new instances.

    Params: (ldpc_size, rate, mod)
    """
  return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_make(*args, **kwargs)

class Bit_deinterleaver_ATSC_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::mack_sdr_rossi::Bit_deinterleaver_ATSC)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Bit_deinterleaver_ATSC)> self) -> Bit_deinterleaver_ATSC_sptr
        __init__(boost::shared_ptr<(gr::mack_sdr_rossi::Bit_deinterleaver_ATSC)> self, Bit_deinterleaver_ATSC p) -> Bit_deinterleaver_ATSC_sptr
        """
        this = _mack_sdr_rossi_swig.new_Bit_deinterleaver_ATSC_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(Bit_deinterleaver_ATSC_sptr self) -> Bit_deinterleaver_ATSC"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr___deref__(self)

    __swig_destroy__ = _mack_sdr_rossi_swig.delete_Bit_deinterleaver_ATSC_sptr
    __del__ = lambda self : None;
    def make(self, *args, **kwargs):
        """
        make(Bit_deinterleaver_ATSC_sptr self, size_t ldpc_size, int rate, int mod) -> Bit_deinterleaver_ATSC_sptr

        Return a shared_ptr to a new instance of mack_sdr_rossi::Bit_deinterleaver_ATSC.

        To avoid accidental use of raw pointers, mack_sdr_rossi::Bit_deinterleaver_ATSC's constructor is in a private implementation class. mack_sdr_rossi::Bit_deinterleaver_ATSC::make is the public interface for creating new instances.

        Params: (ldpc_size, rate, mod)
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_make(self, *args, **kwargs)

    def history(self):
        """history(Bit_deinterleaver_ATSC_sptr self) -> unsigned int"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_history(self)

    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(Bit_deinterleaver_ATSC_sptr self, int which, int delay)
        declare_sample_delay(Bit_deinterleaver_ATSC_sptr self, unsigned int delay)
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_declare_sample_delay(self, *args)

    def sample_delay(self, *args, **kwargs):
        """sample_delay(Bit_deinterleaver_ATSC_sptr self, int which) -> unsigned int"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_sample_delay(self, *args, **kwargs)

    def output_multiple(self):
        """output_multiple(Bit_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(Bit_deinterleaver_ATSC_sptr self) -> double"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_relative_rate(self)

    def start(self):
        """start(Bit_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_start(self)

    def stop(self):
        """stop(Bit_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(Bit_deinterleaver_ATSC_sptr self, unsigned int which_input) -> uint64_t"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(Bit_deinterleaver_ATSC_sptr self, unsigned int which_output) -> uint64_t"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_nitems_written(self, *args, **kwargs)

    def max_noutput_items(self):
        """max_noutput_items(Bit_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_max_noutput_items(self)

    def set_max_noutput_items(self, *args, **kwargs):
        """set_max_noutput_items(Bit_deinterleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_set_max_noutput_items(self, *args, **kwargs)

    def unset_max_noutput_items(self):
        """unset_max_noutput_items(Bit_deinterleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_unset_max_noutput_items(self)

    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(Bit_deinterleaver_ATSC_sptr self) -> bool"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_is_set_max_noutput_items(self)

    def set_min_noutput_items(self, *args, **kwargs):
        """set_min_noutput_items(Bit_deinterleaver_ATSC_sptr self, int m)"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_set_min_noutput_items(self, *args, **kwargs)

    def min_noutput_items(self):
        """min_noutput_items(Bit_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_min_noutput_items(self)

    def max_output_buffer(self, *args, **kwargs):
        """max_output_buffer(Bit_deinterleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_max_output_buffer(self, *args, **kwargs)

    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(Bit_deinterleaver_ATSC_sptr self, long max_output_buffer)
        set_max_output_buffer(Bit_deinterleaver_ATSC_sptr self, int port, long max_output_buffer)
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_set_max_output_buffer(self, *args)

    def min_output_buffer(self, *args, **kwargs):
        """min_output_buffer(Bit_deinterleaver_ATSC_sptr self, int i) -> long"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_min_output_buffer(self, *args, **kwargs)

    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(Bit_deinterleaver_ATSC_sptr self, long min_output_buffer)
        set_min_output_buffer(Bit_deinterleaver_ATSC_sptr self, int port, long min_output_buffer)
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_set_min_output_buffer(self, *args)

    def pc_noutput_items(self):
        """pc_noutput_items(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_noutput_items(self)

    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_noutput_items_avg(self)

    def pc_noutput_items_var(self):
        """pc_noutput_items_var(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_noutput_items_var(self)

    def pc_nproduced(self):
        """pc_nproduced(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_nproduced(self)

    def pc_nproduced_avg(self):
        """pc_nproduced_avg(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_nproduced_avg(self)

    def pc_nproduced_var(self):
        """pc_nproduced_var(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_nproduced_var(self)

    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(Bit_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full(Bit_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_input_buffers_full(self, *args)

    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(Bit_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_avg(Bit_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_input_buffers_full_avg(self, *args)

    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(Bit_deinterleaver_ATSC_sptr self, int which) -> float
        pc_input_buffers_full_var(Bit_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_input_buffers_full_var(self, *args)

    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(Bit_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full(Bit_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_output_buffers_full(self, *args)

    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(Bit_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_avg(Bit_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_output_buffers_full_avg(self, *args)

    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(Bit_deinterleaver_ATSC_sptr self, int which) -> float
        pc_output_buffers_full_var(Bit_deinterleaver_ATSC_sptr self) -> pmt_vector_float
        """
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_output_buffers_full_var(self, *args)

    def pc_work_time(self):
        """pc_work_time(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_work_time(self)

    def pc_work_time_avg(self):
        """pc_work_time_avg(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_work_time_avg(self)

    def pc_work_time_var(self):
        """pc_work_time_var(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_work_time_var(self)

    def pc_work_time_total(self):
        """pc_work_time_total(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_work_time_total(self)

    def pc_throughput_avg(self):
        """pc_throughput_avg(Bit_deinterleaver_ATSC_sptr self) -> float"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_pc_throughput_avg(self)

    def set_processor_affinity(self, *args, **kwargs):
        """set_processor_affinity(Bit_deinterleaver_ATSC_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_set_processor_affinity(self, *args, **kwargs)

    def unset_processor_affinity(self):
        """unset_processor_affinity(Bit_deinterleaver_ATSC_sptr self)"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_unset_processor_affinity(self)

    def processor_affinity(self):
        """processor_affinity(Bit_deinterleaver_ATSC_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_processor_affinity(self)

    def active_thread_priority(self):
        """active_thread_priority(Bit_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_active_thread_priority(self)

    def thread_priority(self):
        """thread_priority(Bit_deinterleaver_ATSC_sptr self) -> int"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_thread_priority(self)

    def set_thread_priority(self, *args, **kwargs):
        """set_thread_priority(Bit_deinterleaver_ATSC_sptr self, int priority) -> int"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_set_thread_priority(self, *args, **kwargs)

    def name(self):
        """name(Bit_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_name(self)

    def symbol_name(self):
        """symbol_name(Bit_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_symbol_name(self)

    def input_signature(self):
        """input_signature(Bit_deinterleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(Bit_deinterleaver_ATSC_sptr self) -> io_signature_sptr"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(Bit_deinterleaver_ATSC_sptr self) -> long"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(Bit_deinterleaver_ATSC_sptr self) -> basic_block_sptr"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(Bit_deinterleaver_ATSC_sptr self, int ninputs, int noutputs) -> bool"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_check_topology(self, *args, **kwargs)

    def alias(self):
        """alias(Bit_deinterleaver_ATSC_sptr self) -> std::string"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_alias(self)

    def set_block_alias(self, *args, **kwargs):
        """set_block_alias(Bit_deinterleaver_ATSC_sptr self, std::string name)"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_set_block_alias(self, *args, **kwargs)

    def _post(self, *args, **kwargs):
        """_post(Bit_deinterleaver_ATSC_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr__post(self, *args, **kwargs)

    def message_ports_in(self):
        """message_ports_in(Bit_deinterleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_message_ports_in(self)

    def message_ports_out(self):
        """message_ports_out(Bit_deinterleaver_ATSC_sptr self) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_message_ports_out(self)

    def message_subscribers(self, *args, **kwargs):
        """message_subscribers(Bit_deinterleaver_ATSC_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_message_subscribers(self, *args, **kwargs)

Bit_deinterleaver_ATSC_sptr_swigregister = _mack_sdr_rossi_swig.Bit_deinterleaver_ATSC_sptr_swigregister
Bit_deinterleaver_ATSC_sptr_swigregister(Bit_deinterleaver_ATSC_sptr)

Bit_deinterleaver_ATSC_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
Bit_deinterleaver_ATSC = Bit_deinterleaver_ATSC.make;



